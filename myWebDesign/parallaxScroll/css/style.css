/* Import web font from google font */
@import url('https://fonts.googleapis.com/css2?family=Indie+Flower&display=swap');

.section-img {
     /* viewport is a whole page where user can see. 
    100vh: viewport 100%
    50vh: viewport 50%  */
    height:100vh;

    /* overflow property decides how to show a content bigger than 
    an element itself : 1) visible(default) 2) hidden 3) scroll 4) auto
    */
    overflow: hidden;

    /* fixed: background image sets fixed regardless of where 
    scroll bar is at */
    background-attachment: fixed;
    background-size: cover;

    /* set font-family property to use google font */
    font-family: 'Indie Flower', cursive;
}

.section-img.first {
    background-image: url('../img/1.jpg');
}

.section-img.second {
    background-image: url('../img/2.jpg');
}

.section-img.third {
    background-image: url('../img/3.jpg');
}

.section-img header {
    color: brown;
    max-width: 50%;
    border: 10px dashed lightyellow;
    position: relative;
    left: 50%; /* easier way -> left: 25%*/
    top: 50%;

    /* transform property in CSS moves, rotates, and scales web elements.
    Animation in browser can be done either Jquery or CSS animate. 
    translate: moves web elements
    scale: makes the elements larger or smaller
    rotate: rotates the elements
    */
    transform: translateX(-50%) translateY(-50%);

    display: inline-block;
    font-weight: 150;
    font-size: 1.5rem;
    text-align:center ;
}

.section-img header:hover { 
    /* transform: rotateX(180deg) rotateY(180deg); */
    /* transition-duration: 2s; */

    /* animation: (your_keyframes_name), transition_time, speed, rounds. 
    animation property can be used with browser vendor prefixes like below
    e.g. -webkit-animation:rotate_h1 2s linear 1; --- for Chrome
         -moz-animation:rotate_h1 2s linear 1; --- for mozilla
    */
    animation: rotate_h1 2s linear infinite;
}

.section-img header h1 { 
    font-weight: 400;
    font-size: 3rem;
    margin-bottom: 1rem;
}

.section-img header h1::after { 
    content: '';
    border: 2px solid brown;
    width: 8rem;
    display: block;

    /* margin : 0(top, bottom) auto(left magin == right mar) : similar to center alignment */
    margin: 0 auto;

    /* rem: root element */
    margin-top: 1rem;
}

/* keyframes is the one of the CSS elements for CSS animation.
0% means start, 100% points to end. It also can be replaced with 
from, to like below  */
@keyframes rotate_h1 {
    from {
        transform: rotate(0deg);
    }
    to {
        transform: rotate(360deg);
    }
}